@charset "utf-8";

/*! mobile 버전 - css */
@media (max-width: 1023px) {
}
/*! pc & tablet 버전 - css */
@media (min-width: 1024px) {
}
// 체크박스 스타일 변수로 빼서 중앙에서 관리하게 해보기

// 2022 버전
/*!
 * component element
 * checkbox
 * 기본
 */
.input2-checkbox2 {
	display: inline-flex;
	flex: 0 0 auto;
	position: relative;
	@include rem(width, 18);
	@include rem(height, 18);
	&.circle {
		@include rem(width, 24);
		@include rem(height, 24);
	}
	&.toggle {
		@include rem(width, 40);
		@include rem(height, 23);
	}
	// 기본 input 숨김처리
	input {
		position: absolute;
		z-index: 1;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		appearance: none;
		opacity: 0;
	}
}
/*!
 * component element
 * checkbox
 * 텍스트
 */
.checkbox-txt-field {
	display: inline-flex;
	flex: 1 1 auto;
	position: relative;
	@include rem(font-size, 14);
	&.style01 {
		@include rem(font-size, 16);
		font-weight: 700;
	}
}
// 텍스트 높이 조절
.input2-checkbox2 + .checkbox-txt-field {
	@include rem(top, 2);
}
.input2-checkbox2 + .checkbox-txt-field.style01 {
	@include rem(top, 1);
}
/*!
 * component element
 * checkbox
 * 모양 - 기본
 */
// 모양별로 클래스를 나눔
.checkbox-shape {
	display: inline-flex;
	width: 100%;
	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		text-align: center;
		transition: all 0.3s ease-out;
		border: 1px solid #e0e0e0;
		@include rem(border-radius, 2);
		background-color: #ffffff;
	}
	&:after {
		content: '';
		position: absolute;
		top: 50%;
		transform: rotate(130deg);
		transition: all 0.3s ease-out;
		@include rem(left, 4);
		@include rem(margin-top, -4);
		@include rem(width, 10);
		@include rem(height, 6);
		@include rem(border-top, 2 solid #e0e0e0);
		@include rem(border-right, 2 solid #e0e0e0);
	}
}
/*!
 * component element
 * checkbox
 * 모양 - circle
 */
// 모양별로 클래스를 나눔
.checkbox-shape-circle {
	display: inline-flex;
	width: 100%;
	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		text-align: center;
		transition: all 0.3s ease-out;
		border: 1px solid #e0e0e0;
		border-radius: 50%;
		background-color: #ffffff;
	}
	&:after {
		content: '';
		position: absolute;
		top: 50%;
		transform: rotate(130deg);
		transition: all 0.3s ease-out;
		@include rem(left, 7);
		@include rem(margin-top, -4);
		@include rem(width, 10);
		@include rem(height, 6);
		@include rem(border-top, 2 solid #e0e0e0);
		@include rem(border-right, 2 solid #e0e0e0);
	}
}
/*!
 * component element
 * checkbox
 * 모양 - line
 */
// 모양별로 클래스를 나눔
.checkbox-shape-line {
	display: inline-flex;
	width: 100%;
	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		text-align: center;
		transition: all 0.3s ease-out;
		border: 1px solid transparent;
		@include rem(border-radius, 2);
		background-color: transparent;
	}
	&:after {
		content: '';
		position: absolute;
		top: 50%;
		transform: rotate(130deg);
		transition: all 0.3s ease-out;
		@include rem(left, 4);
		@include rem(margin-top, -4);
		@include rem(width, 10);
		@include rem(height, 6);
		@include rem(border-top, 2 solid #e0e0e0);
		@include rem(border-right, 2 solid #e0e0e0);
	}
}
/*!
 * component element
 * checkbox
 * 모양 - toggle
 */
// 모양별로 클래스를 나눔
.checkbox-shape-toggle {
	display: inline-flex;
	width: 100%;
	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		text-align: center;
		@include rem(border-radius, 23);
		background-color: #eeeeee;
	}
	&:after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		@include rem(width, 23);
		@include rem(height, 23);
		border: 1px solid rgba(0, 0, 0, 0.1);
		border-radius: 50%;
		background-color: #ffffff;
		transition: all 0.3s ease-out;
	}
}
/*!
 * component element
 * checkbox
 * 상태
 */
// 상태는 텍스트의 위치에 영향 받지 않고 동일 코드를 사용 할 수 있도록 flex로 구현
// 아래에서 모든 타입은 컨트롤 된다.
.input2-checkbox2 {
	input.checked,
	input:checked {
		// 기본,circle
		& + .checkbox-shape-circle:before,
		& + .checkbox-shape:before {
			background-color: #c8f03e;
			border-color: #c8f03e;
		}
		& + .checkbox-shape-circle:after,
		& + .checkbox-shape:after {
			border-color: #ffffff;
		}
		// line
		& + .checkbox-shape-line:before {
			background-color: transparent;
			border-color: transparent;
		}
		& + .checkbox-shape-line:after {
			border-color: #414141;
		}
		// toggle
		& + .checkbox-shape-toggle:before {
			background-color: #c8f03e;
		}
		& + .checkbox-shape-toggle:after {
			@include rem(left, 20);
			border: 1px solid #c8f03e;
		}
	}
	input.disabled,
	input:disabled {
		// 기본,circle
		& + .checkbox-shape-circle:before,
		& + .checkbox-shape:before {
			background-color: #eeeeee;
			border-color: #e0e0e0;
		}
		& + .checkbox-shape-circle:after,
		& + .checkbox-shape:after {
			border-color: #e0e0e0;
		}
		// line
		& + .checkbox-shape-line:before {
			background-color: transparent;
			border-color: transparent;
		}
	}
	input.checked-disabled,
	input:checked:disabled {
		// 기본,circle
		& + .checkbox-shape-circle:before,
		& + .checkbox-shape:before {
			background-color: #e0e0e0;
			border-color: #e0e0e0;
		}
		& + .checkbox-shape-circle:after,
		& + .checkbox-shape:after {
			border-color: #a6a6b3;
		}
		// line
		& + .checkbox-shape-line:before {
			background-color: transparent;
			border-color: transparent;
		}
		& + .checkbox-shape-line:after {
			border-color: #a6a6b3;
		}
	}
	input.readonly,
	input[readonly] {
		// 기본,circle
		& + .checkbox-shape-circle:before,
		& + .checkbox-shape:before {
			background-color: #eeeeee;
			border-color: #e0e0e0;
		}
		& + .checkbox-shape-circle:after,
		& + .checkbox-shape:after {
			border-color: #e0e0e0;
		}
		// line
		& + .checkbox-shape-line:before {
			background-color: transparent;
			border-color: transparent;
		}
		& + .checkbox-shape-line:after {
			border-color: #e0e0e0;
		}
	}
}
/*!
 * component element
 * checkbox
 * 그룹 레이아웃
 */
.input2-checkbox2-group2 {
	display: inline-flex;
	align-items: center;
	&.left {
		.input2-checkbox2 {
			@include rem(margin-right, 8);
		}
	}
	&.right {
		flex-direction: row-reverse;
		.input2-checkbox2 {
			@include rem(margin-left, 8);
		}
	}
	&.top {
		flex-direction: column;
	}
	&.bottom {
		flex-direction: column-reverse;
	}
}

// 2021 버전
// ******************** code comments ********************
// input - checkbox
// ******************** code comments ********************
/*! input - checkbox */
.input-checkbox {
	display: inline-block;
	input {
		border: 0;
		clip: rect(0 0 0 0);
		width: 1px;
		height: 1px;
		margin: -1px;
		overflow: hidden;
		padding: 0;
		position: absolute;
	}
	label {
		display: inline-block;
		position: relative;
		@include rem(min-width, 20px);
		@include rem(min-height, 20px);
		@include rem(padding-top, 1px);
		// 익스에서 위로 조금더 올라 간것 같으면 위 패딩은 미디어쿼리 핵으로 2px 로 분기처리하기
		user-select: none;
	}
	.txt {
		display: inline-block;
		color: gray;
		@include rem(font-size, 16px);
	}
	label:before {
		content: '';
		position: absolute;
		top: 50%;
		left: 0;
		@include rem(width, 20px);
		@include rem(height, 20px);
		@include rem(margin-top, -10px);
		border: 1px solid gray;
		text-align: center;
		transition: all 0.3s ease-out;
	}
	label:after {
		content: '';
		display: block;
		position: absolute;
		top: 50%;
		@include rem(left, 5px);
		@include rem(margin-top, -4px);
		@include rem(width, 9px);
		@include rem(height, 6px);
		@include rem(border-top, 2px solid gray);
		@include rem(border-right, 2px solid gray);
		transform: rotate(130deg);
		transition: all 0.3s ease-out;
	}
	&.right {
		label {
			@include rem(padding-left, 30px);
		}
	}
	&.left {
		label {
			@include rem(padding-right, 30px);
		}
		label:before {
			left: auto;
			right: 0;
		}
		label:after {
			left: auto;
			@include rem(right, 5px);
		}
	}
	&.up {
		label {
			@include rem(padding-bottom, 25px);
		}
		label:before {
			top: auto;
			bottom: 0;
			left: 50%;
			@include rem(margin-left, -10px);
			margin-top: 0;
		}
		label:after {
			top: auto;
			@include rem(bottom, 8px);
			left: 50%;
			@include rem(margin-left, -5px);
			margin-top: 0;
		}
	}
	&.down {
		label {
			@include rem(padding-top, 25px);
		}
		label:before {
			top: 0;
			left: 50%;
			@include rem(margin-left, -10px);
			margin-top: 0;
		}
		label:after {
			@include rem(top, 6px);
			left: 50%;
			@include rem(margin-left, -5px);
			margin-top: 0;
		}
	}
	// 접근성 소스 필요시 아래 주석 해제
	// input:hover,
	// input:focus{
	// 	& + label:before{
	// 		box-shadow: 0px 0px 2px 3px rgba(0,180,255,0.5);
	// 	}
	// }
	// checked 됐을때 스타일 변화
	input.checked,
	input:checked {
		& + label:before {
			background-color: blue;
			border-color: blue;
		}
		& + label:after {
			border-color: #ffffff;
		}
		& + label .txt {
			color: gray;
		}
	}
	// disabled 됐을때 스타일 변화
	input.disabled,
	input:disabled {
		& + label:before {
			background-color: lightgray;
			border-color: gray;
		}
		& + label:after {
			border-color: #ffffff;
		}
	}
}
